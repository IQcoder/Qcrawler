<?php

namespace Qcrawler\crawler;

use GuzzleHttp\Client;
use GuzzleHttp\Pool;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\Psr7\Response;

/**
 * Class QcrawleConcurrency 并发多线程方式爬取
 * @package Qcrawler\crawler
 */
class QcrawleConcurrency extends QCrawler
{
    /**
     * @var int
     * 并发线程数，默认为2
     */
    public $concurrency = 2;

    private $promise;

    public function init()
    {
        $client = new Client(['timeout' => $this->timeout]);
        $request = function($total) {
            $uri = $this->base_uri;
            for ($i = 0; $i < $total; $i++) {
                yield new Request('GET', $uri);
            }
        };
        $pool = new Pool($client,$request(100),[
            'concurrency' => $this->concurrency,
            'fulfilled' => function(Response $response, $index) {
                $response->getBody()->getContents();
            },
            'rejected' => function($reason, $index) {
                // this is delivered each failed request
            }
        ]);
        $this->promise = $pool->promise();
        $this->promise->wait();
    }

    public function run()
    {
        return parent::run(); // TODO: Change the autogenerated stub
    }
}